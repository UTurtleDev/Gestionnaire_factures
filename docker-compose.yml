version: '3.8'

services:
  web:
    build: .
    restart: always
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"

  db:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8080:80"
    depends_on:
      - web
    networks:
      - app_network

volumes:
  postgres_data:
  static_volume:
  media_volume:
  backups:

networks:
  app_network:
    driver: bridge